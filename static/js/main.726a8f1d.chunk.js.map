{"version":3,"sources":["components/Country/Country.js","components/Spinner.js","components/Countries/Countries.js","components/NotMatch/NotMatch.js","components/Region/Region.js","components/RegionBloc/RegionBloc.js","components/Header/Header.js","components/CountryDetail.js/CountryDetail.js","components/RegionCountries/RegionCountries.js","components/blocCountries/BlocCountries.js","App.js","reportWebVitals.js","index.js"],"names":["Country","name","flag","Col","md","className","Card","Img","variant","src","Body","Title","Button","as","Link","to","Spinner","type","color","height","width","Countries","useState","countries","setCountries","useEffect","fetch","then","res","json","data","length","Row","map","country","NotMatch","Region","region","indx","RegionBloc","regionalBlocs","setRegionalBlocs","ReginalBlocData","console","log","img","short_name","alt","Header","menuStyle","borderBottom","Navbar","bg","expand","Container","active","Toggle","aria-controls","Collapse","id","Nav","activeStyle","exact","CountryDetail","countryName","useParams","countryDetails","setCountryDetails","capital","population","subregion","numericCode","timezones","currencies","onClick","window","history","back","style","backgroundImage","backgroundSize","code","symbol","RegionCountries","regions","regionCountries","setRegionCountries","BlocCountries","blocName","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.726a8f1d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Col, Card, Button} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Country = ({name, flag}) => {\r\n    return (\r\n        <Col md={3} className='my-3'>\r\n            <Card>\r\n                <div className='card-img'>\r\n                    <Card.Img variant=\"top\" src={flag} />\r\n                </div>\r\n                <Card.Body className='text-center'>\r\n                    <Card.Title>{name}</Card.Title>\r\n                    <Button as={Link} to={`country/${name}`}>view details</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default Country;","import React from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <Loader\r\n        type=\"Grid\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        // timeout={3000} //3 secs\r\n      />\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React, { useEffect, useState } from 'react';\r\nimport Country from '../Country/Country'\r\nimport {Row} from 'react-bootstrap'\r\nimport Spinner from '../Spinner';\r\n\r\nconst Countries = () => {\r\n    const [countries, setCountries] = useState([]);\r\n    useEffect(() => {\r\n        fetch('https://restcountries.eu/rest/v2/all')\r\n        .then(res => res.json())\r\n        .then(data => setCountries(data))\r\n    }, [])\r\n    return (\r\n        <div className='container my-4'>\r\n            {\r\n                Countries === false ? 'ok' : <Spinner></Spinner>\r\n            }\r\n            <h2 className='text-center'>All Countries: {countries.length}</h2>\r\n            <Row>\r\n                {\r\n                    countries.map(country => <Country name={country.name} flag={country.flag}/>)    \r\n                }\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\n\r\nconst NotMatch = () => {\r\n    return (\r\n        <div>\r\n            <h2>Opp.! sorry page not found</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotMatch;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Region = () => {\r\n    const regions = ['africa', 'americas', 'asia', 'europe', 'oceania']\r\n    return (\r\n        <div className=\"container allRegion mt-3\">\r\n        {\r\n            regions.map((region, indx) => <Link to={`/region/${region}/countries`}><h1 className='text-center' key={indx}>{region}</h1></Link>)\r\n        }\r\n       </div>\r\n    );\r\n};\r\n\r\nexport default Region;","import React, { useEffect, useState } from 'react';\r\nimport ReginalBlocData from '../../fakeData/reginal_bloc_data';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RegionBloc = () => {\r\n    const [regionalBlocs, setRegionalBlocs] = useState([])\r\n    useEffect(() => setRegionalBlocs(ReginalBlocData), [])\r\n    console.log(regionalBlocs)\r\n    return (\r\n        <div className=\"container blocArea\">\r\n            {\r\n            regionalBlocs.map(({name, img, short_name})=>{\r\n                return(\r\n                    <Link to={`/regionalbloc/${short_name}/countries`}>\r\n                        <div className=\"regionalBloc d-flex align-items-center\">\r\n                                <img src={img} alt='Regional logo'/>\r\n                                <h2>{short_name} ({name})</h2>\r\n                        </div>\r\n                    </Link>\r\n                )\r\n            })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegionBloc;","import React from 'react';\r\nimport {Navbar, Nav, Container} from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Header.css'\r\n\r\n\r\nconst Header = () => {\r\n    const menuStyle = {\r\n        color: '#39c0fb',\r\n        borderBottom: '3px solid #39c0fb'\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar bg=\"dark\" expand=\"lg\" className=\"nav-bar\">\r\n                <Container>\r\n                    <div className=\"brandName\">\r\n                        <NavLink active to=\"/\">COUNTRIES</NavLink>\r\n                    </div>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto navBarMenu\" >\r\n                            <NavLink activeStyle={menuStyle} exact to='/'>Home</NavLink>\r\n                            <NavLink activeStyle={menuStyle} to='/region'>Region</NavLink>\r\n                            <NavLink activeStyle={menuStyle} to='/regionalbloc'>Regional Bloc</NavLink>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport {Row, Col, Card, Button} from 'react-bootstrap'\r\n\r\nconst CountryDetail = () => {\r\n    const {countryName} = useParams()\r\n    const [countryDetails, setCountryDetails] = useState([]);\r\n    useEffect(() => {\r\n        fetch(`https://restcountries.eu/rest/v2/name/${countryName}`)\r\n        .then(res => res.json())\r\n        .then(data => setCountryDetails(data[0]))\r\n    }, [countryName])\r\n    const {flag, capital, population, subregion, numericCode, region, timezones, currencies} = countryDetails;\r\n    return (\r\n        <>\r\n            <Button onClick={() => window.history.back()} className=\"mt-2 ml-2 py-2 px-4\">Back</Button>\r\n            <Row>\r\n                <Col md={5} className='my-3 mx-auto' >\r\n                    <Card style={{\r\n                    backgroundImage: ` linear-gradient(rgba(255,255,255,0.8), rgba(255,255,255,0.7)), url(${flag})`,\r\n                    backgroundSize: 'cover',\r\n                    color: '#2c3e50',\r\n                    }} className='detailsCard'>\r\n                        <Card.Body>\r\n                            <h2 className='text-center'> <img src={flag} alt=\"Country Flag\"/> {countryName}</h2>\r\n                            <h4>Capital : {capital}</h4>\r\n                            <p>Population : {population}</p>\r\n                            <p>Region : {region}</p>\r\n                            <p>Subregion : {subregion}</p>\r\n                            <p>Numeric Code : {numericCode}</p>\r\n                            <p>Currency : {currencies && currencies[0].name} ({currencies && currencies[0].code})</p>\r\n                            {/* <p>Currency symbol : {currencies && currencies[0].symbol}</p> */}\r\n                            <p>Currency symbol : {currencies?.[0].symbol}</p>\r\n                            <p>Time zone : {timezones}</p>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CountryDetail;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Country from '../Country/Country';\r\nimport { Row , Button} from 'react-bootstrap'\r\n\r\nconst RegionCountries = () => {\r\n    const regions = useParams();\r\n    const region = regions.regions\r\n    const [regionCountries, setRegionCountries] = useState([]);\r\n    useEffect(() => {\r\n        fetch(`https://restcountries.eu/rest/v2/region/${region}`)\r\n        .then(res => res.json())\r\n        .then(data => setRegionCountries(data))\r\n    }, [region])\r\n    return (\r\n        <>\r\n        <Button onClick={() => window.history.back()} className=\"mt-2 ml-2 py-2 px-4\">Back</Button>\r\n            <div className='container my-4'>\r\n                <Row>\r\n                    {\r\n                        regionCountries.map(country => <Country name={country.name} flag={country.flag}/>)    \r\n                    }\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RegionCountries;","import React, { useEffect, useState } from 'react';\r\nimport { Row, Button } from 'react-bootstrap';\r\nimport { useParams } from 'react-router';\r\nimport Country from '../Country/Country';\r\n\r\nconst BlocCountries = () => {\r\n    const {blocName} = useParams();\r\n    const [regionalBlocs, setRegionalBlocs] = useState([]);\r\n    useEffect(() => {\r\n        fetch(`https://restcountries.eu/rest/v2/regionalbloc/${blocName}`)\r\n        .then(res => res.json())\r\n        .then(data => setRegionalBlocs(data))\r\n    }, [blocName])\r\n    console.log(regionalBlocs);\r\n    return (\r\n        <>\r\n            <Button onClick={() => window.history.back()} className=\"mt-2 ml-2 py-2 px-4\">Back</Button>\r\n            <div className='container my-4'>\r\n                <Row>\r\n                    {\r\n                        regionalBlocs.map(country => <Country name={country.name} flag={country.flag}/>)    \r\n                    }\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BlocCountries;","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Countries from './components/Countries/Countries';\nimport NotMatch from './components/NotMatch/NotMatch';\nimport Region from './components/Region/Region';\nimport RegionBloc from './components/RegionBloc/RegionBloc';\nimport Header from './components/Header/Header';\nimport CountryDetail from './components/CountryDetail.js/CountryDetail';\nimport RegionCountries from './components/RegionCountries/RegionCountries';\nimport BlocCountries from './components/blocCountries/BlocCountries';\n\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Header/>\n        <Switch>\n            <Route path='/region/:regions/country/:countryName'>\n              <CountryDetail />\n            </Route>\n            <Route path='/regionalbloc/:bloc/country/:countryName'>\n              <CountryDetail />\n            </Route>\n            <Route path='/regionalbloc/:blocName/countries'>\n              <BlocCountries />\n            </Route>\n            <Route path='/region/:regions/countries'>\n              <RegionCountries />\n            </Route>\n            <Route path='/country/:countryName'>\n              <CountryDetail />\n            </Route>\n            <Route exact path=\"/\">\n              <Countries/>\n            </Route>\n            <Route path=\"/region\">\n              <Region />\n            </Route>\n            <Route path=\"/regionalbloc\">\n              <RegionBloc />\n            </Route>\n            <Route path=\"*\">\n              <NotMatch/>\n            </Route>\n          </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}